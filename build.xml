<?xml version="1.0" encoding="UTF-8"?>
<project name="bikewar" default="build">

	<property environment="env"/>
	<property file="build.properties"/>

	<target name="clean">
		<delete dir="${output}"/>
	</target>

	<target name="copy-debug-sources">
		<mkdir dir="${output.haxe}"/>


	</target>

	<target name="compile-player">
		<mkdir dir="${output.js}"/>

		<exec executable="haxe" dir="Player" failonerror="true">
			<arg line="Player.hxml"/>
			<arg line="-js '${output.js}/Player.js'"/>
		</exec>
	</target>

    <target name="compile-ia">
        <mkdir dir="${output.js}"/>

        <exec executable="haxe" dir="Player" failonerror="true">
            <arg line="-cp src -js ${output.js}/MyIA.js -main MyIA -debug"/>
            <arg line="-lib taminahx"/>
        </exec>
    </target>

	<!--<target name="compile-editor-debug" depends="copy-debug-sources">-->
	<target name="compile-player-debug">
		<mkdir dir="${output.js}"/>

		<mkdir dir="${output.src}/Player"/>

		<copy todir="${output.src}/Player">
			<fileset dir="Player/src">
				<include name="**"/>
			</fileset>
		</copy>

		<exec executable="haxe" dir="Player" failonerror="true">
            <arg line="-cp src -js ${output.js}/Player.js -main com.tamina.bikewar.PlayerUI -debug"/>
            <arg line="-lib mconsole"/>
            <arg line="-lib msignal"/>
            <arg line="-lib createjs"/>
            <arg line="-lib taminahx"/>
		</exec>

		<replace file="${output.js}/Player.js.map" token="${sourceRootLine.token}"
				 value="${sourceRootLine.value}"/>
        <replace file="${output.js}/Player.js.map" token="${env.BUILD_DIR}" value="src/Player"/>
		<replace file="${output.js}/Player.js.map" token="\" value="/"/>
	</target>


	<target name="compile-all" depends="compile-player, compile-ia"/>

	<target name="compile-all-debug" depends="compile-player-debug"/>

	<target name="copy-static-resources">
		<copy todir="${output}">
			<fileset dir="TestPlayer/src">
				<include name="**/*"/>
			</fileset>
            <fileset dir="Player/assets">
                <include name="**/*"/>
            </fileset>
		</copy>
	</target>

    <target name="deploy" depends="copy-static-resources">
        <copy todir="${deployDir}">
            <fileset dir="TestPlayer/build">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

	<target name="build" depends="clean, copy-static-resources, compile-all, deploy"/>

	<target name="build-debug" depends="clean, copy-static-resources, compile-all-debug"/>


</project>